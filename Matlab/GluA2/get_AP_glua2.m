function [AP, index] = get_AP_glua2(filename, xml_name)
%IMPORTFILE Import data from a text file
%  FEMALE1LIN = IMPORTFILE(FILENAME) reads data from text file FILENAME
%  for the default selection.  Returns the data as a table.
%
%  FEMALE1LIN = IMPORTFILE(FILE, DATALINES) reads data for the specified
%  row interval(s) of text file FILENAME. Specify DATALINES as a
%  positive scalar integer or a N-by-2 array of positive scalar integers
%  for dis-contiguous row intervals.
%
%  Example:
%  Female1lin = importfile("E:\Dropbox (HHMI)\Projects\Unbised\PSD95_EE\Female1_lin.xml", [1, Inf]);
%
%  See also READTABLE.
%
% Auto-generated by MATLAB on 24-Jan-2022 22:33:16

%% Input handling

xml_filename = [xml_name '_lin.xml'];
% If dataLines is not specified, define defaults
dataLines = [1, Inf];

%% Set up the Import Options and import the data
opts = delimitedTextImportOptions("NumVariables", 15);

% Specify range and delimiter
opts.DataLines = dataLines;
opts.Delimiter = "=";

% Specify column names and types
opts.VariableNames = ["Var1", "Name", "Var3", "Var4", "Var5", "Var6", "Var7", "AP", "Var9", "Var10", "Var11", "Var12", "Var13", "Var14", "Var15"];
opts.SelectedVariableNames = ["Name", "AP"];
opts.VariableTypes = ["string", "string", "string", "string", "string", "string", "string", "double", "string", "string", "string", "string", "string", "string", "string"];

% Specify file level properties
opts.ExtraColumnsRule = "ignore";
opts.EmptyLineRule = "read";

% Specify variable properties
opts = setvaropts(opts, ["Var1", "Name", "Var3", "Var4", "Var5", "Var6", "Var7", "Var9", "Var10", "Var11", "Var12", "Var13", "Var14", "Var15"], "WhitespaceRule", "preserve");
opts = setvaropts(opts, ["Var1", "Name", "Var3", "Var4", "Var5", "Var6", "Var7", "Var9", "Var10", "Var11", "Var12", "Var13", "Var14", "Var15"], "EmptyFieldRule", "auto");
opts = setvaropts(opts, "AP", "TrimNonNumeric", true);
opts = setvaropts(opts, "AP", "ThousandsSeparator", ",");

% Import the data
tbl = readtable(xml_filename, opts);
valid = ~isnan( tbl.AP);
keys = tbl.Name(valid);
values =tbl.AP(valid);
keys =  cellfun(@(x) x(2:end-4), cellstr(keys), 'UniformOutput', false);
index = find(contains(keys, filename));
AP = values(index);
end